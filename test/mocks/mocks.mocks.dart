// Mocks generated by Mockito 5.4.5 from annotations
// in guiago/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:guiago/core/services/api_service.dart' as _i2;
import 'package:guiago/data/datasource/local.dart' as _i7;
import 'package:guiago/data/datasource/remote.dart' as _i5;
import 'package:guiago/data/dto/response.dart' as _i3;
import 'package:guiago/data/interfaces/local_storage.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAPIService_0 extends _i1.SmartFake implements _i2.APIService {
  _FakeAPIService_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_1 extends _i1.SmartFake implements _i3.Response {
  _FakeResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocalStorage_2 extends _i1.SmartFake implements _i4.LocalStorage {
  _FakeLocalStorage_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i5.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.APIService get apiService =>
      (super.noSuchMethod(
            Invocation.getter(#apiService),
            returnValue: _FakeAPIService_0(
              this,
              Invocation.getter(#apiService),
            ),
          )
          as _i2.APIService);

  @override
  _i6.Future<_i3.Response> getData() =>
      (super.noSuchMethod(
            Invocation.method(#getData, []),
            returnValue: _i6.Future<_i3.Response>.value(
              _FakeResponse_1(this, Invocation.method(#getData, [])),
            ),
          )
          as _i6.Future<_i3.Response>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i7.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.LocalStorage get localStorage =>
      (super.noSuchMethod(
            Invocation.getter(#localStorage),
            returnValue: _FakeLocalStorage_2(
              this,
              Invocation.getter(#localStorage),
            ),
          )
          as _i4.LocalStorage);

  @override
  _i6.Future<_i3.Response> getData() =>
      (super.noSuchMethod(
            Invocation.method(#getData, []),
            returnValue: _i6.Future<_i3.Response>.value(
              _FakeResponse_1(this, Invocation.method(#getData, [])),
            ),
          )
          as _i6.Future<_i3.Response>);

  @override
  _i6.Future<void> saveData(_i3.Response? response) =>
      (super.noSuchMethod(
            Invocation.method(#saveData, [response]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);
}
